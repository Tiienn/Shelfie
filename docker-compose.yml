version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: shelfie-postgres
    environment:
      POSTGRES_DB: shelfiedb
      POSTGRES_USER: shelfie
      POSTGRES_PASSWORD: shelfie123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shelfie -d shelfiedb"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - shelfie-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: shelfie-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - shelfie-network

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: shelfie-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: shelfie
      RABBITMQ_DEFAULT_PASS: shelfie123
      RABBITMQ_DEFAULT_VHOST: shelfie
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - shelfie-network

  # MinIO (S3-compatible storage for local development)
  minio:
    image: minio/minio:latest
    container_name: shelfie-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - shelfie-network

  # Backend Server (Development)
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: shelfie-server
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://shelfie:shelfie123@postgres:5432/shelfiedb
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://shelfie:shelfie123@rabbitmq:5672/shelfie
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin123
      S3_BUCKET_NAME: shelfie-receipts
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - shelfie-network
    command: npm run dev

  # Frontend Client (Development)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: shelfie-client
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3001
      REACT_APP_WS_URL: ws://localhost:3001
      GENERATE_SOURCEMAP: true
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - shelfie-network
    command: npm start

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  minio_data:
    driver: local

networks:
  shelfie-network:
    driver: bridge